Selection Sort:

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace SelectionSort
{
    class Program
    {
        static void Main(string[] args)
        {
            int[] sayilar = new int[5] {5,43,53,36,12};
            foreach (var a in sayilar)
            {
                Console.Write(a+ " ");
            }
            Console.WriteLine();
            int index;
            for (int i=0; i<sayilar.Length; i++)
            {
                index = i;
                for (int j=i; j<sayilar.Length; j++)
                {
                    if (sayilar[index] > sayilar[j])
                    {
                        index = j;
                    }
                }

                int temp;
                temp = sayilar[i];
                sayilar[i] = sayilar[index];
                sayilar[index] = temp;
            }

            foreach (var item in sayilar)
            {
                Console.Write(item + " ");
            }
            Console.ReadLine();
        }
    }
}

Insertion Sort:

def insertionSort(alist):
    karsilastirma=0
    yerdegistirme=0
    for index in range(1,len(alist)):
        yerdegistirme=yerdegistirme+1
        
    currentvalue = alist[index]
    position = index

    while position>0 and alist[position-1]>currentvalue:
        alist[position]=alist[position-1]
        position = position-1
        karsilastirma=karsilastirma +1
    alist[position]=currentvalue
    print ("karsilastirma say覺s覺  :",karsilastirma)
    print ("yerdegistirme say覺s覺  :",yerdegistirme)

    
def createAnArray(size):
    import random
    array=[]
    for i in range(0,size):
        array.append(int(random.uniform(-1000,1000)))
    return array
size=int(input("size  ?"))
alist=createAnArray(size)
import time
t_start=time.time()
insertionSort(alist)
t_end=time.time()
for i in range(0,len(alist)):
    print (i,".item",alist[i])
print ("n kare :",size*size,"time :",t_end-t_start)
